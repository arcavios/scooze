name: Scryfall Bulkdata Validation

on:
    push
    # push:
    #     branches: [dev]
    # # Every Monday at 07:00 UTC
    # schedule:
    #     - cron: "0 7 * * 1"

jobs:
    setup-matrix:
        runs-on: ubuntu-latest
        outputs:
            matrix: ${{ steps.setup-matrix.outputs.matrix }}
        steps:
            - id: setup-matrix
              uses: druzsan/setup-matrix@v2
              with:
                  # Use | to preserve valid YAML syntax
                  matrix: |
                      os: ['ubuntu-latest'] # 'macos-latest'
                      python-version: ['3.11'] # TODO: '3.12'
    scryfall-bulkdata:
        needs:
            - setup-matrix
        strategy:
            fail-fast: true
            matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}
        runs-on: ${{ matrix.os }}
        steps:
            #----------------------------------------------
            #       check-out repo and set up python
            #----------------------------------------------
            - name: Check out repository
              uses: actions/checkout@v4
            - name: Set up Python ${{ matrix.python-version }}
              id: setup-python
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python-version }}
            #----------------------------------------------
            #  -----  install & configure poetry  -----
            #----------------------------------------------
            - name: Install Poetry
              uses: snok/install-poetry@v1
              with:
                  # version: ${{ matrix.poetry-version }}
                  virtualenvs-create: true
                  virtualenvs-in-project: true
            #----------------------------------------------
            #       load cached venv if cache exists
            #----------------------------------------------
            - name: Load cached venv
              id: cached-poetry-dependencies
              uses: actions/cache@v4
              with:
                  path: .venv
                  key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
            #----------------------------------------------
            # install dependencies if cache does not exist
            #----------------------------------------------
            - name: Install dependencies
              if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
              run: poetry install --no-interaction --no-root
            #----------------------------------------------
            # install your root project, if required
            #----------------------------------------------
            - name: Install library
              run: poetry install --no-interaction
            #----------------------------------------------
            #    load bulkdata into docker container
            # TODO: change back to --all
            #----------------------------------------------
            - name: Load Scryfall bulkdata
              run: |
                  source .venv/bin/activate
                  echo "scooze setup docker"
                  scooze setup docker
                  echo "scooze load cards --oracle --force-download"
                  scooze load cards --oracle --force-download
            #----------------------------------------------
            #    check for validation errors
            #----------------------------------------------
            - name: Count validation errors
              run: |
                  echo "ERR_COUNT=$(grep -c -e '"level": "ERROR"' -e '"level": "CRITICAL"' logs/scooze.log.jsonl)" >> $GITHUB_ENV
            - name: Exit?
              if: env.ERR_COUNT > 0
              run: |
                  exit(1)

            # TODO: save the logs as a GitHub Action artifact
