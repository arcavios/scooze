name: Scryfall Bulkdata Validation

on:
  push:
    branches: [dev]
  # Every Monday at 07:00 UTC
  schedule:
    - cron: "0 7 * * 1"

jobs:
  scryfall-bulkdata:
    strategy:
      fail-fast: true
      matrix:
        os: ${{ fromJson(vars.OS) }}
        python-version: ${{ fromJson(vars.PYTHON_VERSION) }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install library
        run: poetry install --no-interaction

      - name: Load Scryfall bulkdata
        run: |
          source .venv/bin/activate
          echo "scooze setup docker"
          scooze setup docker
          echo "scooze load cards --all --force-download --concise"
          scooze load cards --all --force-download --concise

      - name: Count validation errors
        run: |
          echo "ERR_COUNT=$(grep -c -e '"level": "ERROR"' -e '"level": "CRITICAL"' logs/scooze.log.jsonl)" >> $GITHUB_ENV
      - name: Exit?
        if: env.ERR_COUNT > 0
        run: |
          exit(1)

      # TODO: save the logs as a GitHub Action artifact
