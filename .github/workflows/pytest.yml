name: Pytest

on: [push]

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          cache: 'pip'

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Set up cache
        uses: actions/cache@v2
        id: cached-poetry-dependencies
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: |
          poetry env use ${{ steps.full-python-version.outputs.version }}
          poetry install --no-interaction
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      # - name: Setup Python
      #   uses: actions/setup-python@v3
      #   with:
      #     python-version: "process.env.PYTHON_VERSION"
      #     cache: "poetry"

      # - name: Install dependencies
      #   run: pip install -r pyproject.toml

      - name: Test with pytest
        run: |
          pip install pytest pytest-cov
          pytest tests/
